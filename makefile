VLOG				 = vlog
SRC					 = src
UVM_HOME		 = ./$(SRC)/uvm-1.1d
INCLUDES		 = +incdir+$(UVM_HOME)/src $(UVM_HOME)/src/uvm.sv
FLAGS				 = +define+UVM_NO_DPI
UVM_COMMAND  = $(VLOG) $(FLAGS) $(INCLUDES)

#command for verificaton
MODELSIM_VERIFICATION_COMMAND   = vsim -c bachelorThesis.TestBench -do "run -all"

#basic circuits
BASIC_CIRCUITS_SOURCE_DIRECTORY	= $(SRC)/basicCircuits
BASIC_CIRCUITS_IMPLEMENTATION		= $(BASIC_CIRCUITS_SOURCE_DIRECTORY)/*.sv

basic_circuits : $(BASIC_CIRCUITS_IMPLEMENTATION)
	$(VLOG) $(BASIC_CIRCUITS_IMPLEMENTATION)

#memory
MEMORY_SOURCE_DIRECTORY	= $(SRC)/memory
MEMORY_IMPLEMENTATION 	= $(MEMORY_SOURCE_DIRECTORY)/*.sv 

memory_implementation : $(MEMORY_IMPLEMENTATION)
	$(VLOG) $(MEMORY_IMPLEMENTATION)

#ram
RAM_SOURCE_DIRECTORY	=	$(MEMORY_SOURCE_DIRECTORY)/ram
RAM_IMPLEMENTATION		= $(MEMORY_IMPLEMENTATION) $(RAM_SOURCE_DIRECTORY)/implementation/*.sv 
RAM_VERIFICATION			=	$(RAM_IMPLEMENTATION) $(RAM_SOURCE_DIRECTORY)/verification/*.sv

ram_implementation : $(RAM_IMPLEMENTATION)
	$(VLOG) $(RAM_IMPLEMENTATION)
	
ram_verification : $(RAM_VERIFICATION)
	$(UVM_COMMAND) $(RAM_VERIFICATION) && $(MODELSIM_VERIFICATION_COMMAND)

#snoopy cache
SNOOPY_SOURCE_DIRECTORY = $(MEMORY_SOURCE_DIRECTORY)/snoopyCache

#snoopy cache invalidate protocol 
SNOOPY_INVALIDATE_SOURCE_DIRECTORY = $(SNOOPY_SOURCE_DIRECTORY)/invalidateProtocol

#invalidate protocol operating unit
SNOOPY_INVALIDATE_CACHE_UNIT_SOURCE_DIRECTORY = $(SNOOPY_INVALIDATE_SOURCE_DIRECTORY)/cacheUnit
SNOOPY_INVALIDATE_CACHE_UNIT_IMPLEMENTATION   = $(SNOOPY_INVALIDATE_CACHE_UNIT_SOURCE_DIRECTORY)/*.sv

#Replacement algorithm implementation
INVALIDATE_REPLACEMENT_ALGORITHM_SOURCE_DIRECTORY	= $(SNOOPY_INVALIDATE_CACHE_UNIT_SOURCE_DIRECTORY)/replacementAlgorithm
INVALIDATE_REPLACEMENT_ALGORITHM_IMPLEMENTATION  	= $(INVALIDATE_REPLACEMENT_ALGORITHM_SOURCE_DIRECTORY)/*.sv

#lru
INVALIDATE_LRU_SOURCE_DIRECTORY     = $(INVALIDATE_REPLACEMENT_ALGORITHM_SOURCE_DIRECTORY)/lru
INVALIDATE_LRU_IMPLEMENTATION       = $(INVALIDATE_REPLACEMENT_ALGORITHM_IMPLEMENTATION) $(INVALIDATE_LRU_SOURCE_DIRECTORY)/implementation/*.sv
INVALIDATE_LRU_CLASS_IMPLEMENTATION = $(INVALIDATE_LRU_SOURCE_DIRECTORY)/classImplementation/*.sv
INVALIDATE_LRU_VERIFICATION         = $(INVALIDATE_LRU_IMPLEMENTATION) \
					 													  $(INVALIDATE_LRU_CLASS_IMPLEMENTATION) \
					 											 		  $(INVALIDATE_LRU_SOURCE_DIRECTORY)/verification/*.sv 

invalidate_lru_implementation	: $(INVALIDATE_LRU_IMPLEMENTATION)
	$(VLOG) $(INVALIDATE_LRU_IMPLEMENTATION)

invalidate_lru_verification		: $(INVALIDATE_LRU_VERIFICATION)
	$(UVM_COMMAND) $(INVALIDATE_LRU_VERIFICATION) && $(MODELSIM_VERIFICATION_COMMAND)

#snoopy direct mapping cache unit
SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_SOURCE_DIRECTORY = $(SNOOPY_INVALIDATE_CACHE_UNIT_SOURCE_DIRECTORY)/directMappingCacheUnit
SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_IMPLEMENTATION   = $(SNOOPY_INVALIDATE_CACHE_UNIT_IMPLEMENTATION) \
																												 			 $(SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_SOURCE_DIRECTORY)/implementation/*.sv

snoopy_invalidate_direct_mapping_cache_unit_implementation : $(SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_IMPLEMENTATION)
	$(VLOG) $(SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_IMPLEMENTATION)

#snoopy set associative cache
SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_SOURCE_DIRECTORY 		 = $(SNOOPY_INVALIDATE_CACHE_UNIT_SOURCE_DIRECTORY)/setAssociativeCacheUnit
SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_IMPLEMENTATION 			 = $(SNOOPY_INVALIDATE_DIRECT_MAPPING_CACHE_UNIT_IMPLEMENTATION) \
																						 								   $(INVALIDATE_LRU_IMPLEMENTATION) \
																						 								 	 $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_SOURCE_DIRECTORY)/implementation/*.sv
SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_CLASS_IMPLEMENTATION = $(INVALIDATE_LRU_CLASS_IMPLEMENTATION) \
																															 $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_SOURCE_DIRECTORY)/classImplementation/*.sv
SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_VERIFICATION 				 = $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_IMPLEMENTATION) \
																						 									 $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_CLASS_IMPLEMENTATION) \
																						 									 $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_SOURCE_DIRECTORY)/verification/*.sv

snoopy_invalidate_set_associative_cache_implementation : $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_IMPLEMENTATION)
	$(VLOG) $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_IMPLEMENTATION)

snoopy_invalidate_set_associative_cache_verification : $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_VERIFICATION)
	$(UVM_COMMAND) $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_VERIFICATION) && $(MODELSIM_VERIFICATION_COMMAND)

#snoppy cache invalidate protocol
SNOOPY_INVALIDATE_PROTOCOL_SOURCE_DIRECTORY = $(SNOOPY_INVALIDATE_SOURCE_DIRECTORY)/protocol

#moesif
SNOOPY_INVALIDATE_MOESIF_SOURCE_DIRECTORY         = $(SNOOPY_INVALIDATE_PROTOCOL_SOURCE_DIRECTORY)/moesif
SNOOPY_INVALIDATE_MOESIF_IMPLEMENTATION_DIRECTORY = $(SNOOPY_INVALIDATE_MOESIF_SOURCE_DIRECTORY)/implementation
SNOOPY_INVALIDATE_MOESIF_DEPENDENCIES             = $(SNOOPY_INVALIDATE_MOESIF_IMPLEMENTATION_DIRECTORY)/*.sv

#moesif cache controller
#implementation
SNOOPY_INVALIDATE_MOESIF_CONTROLLER_SOURCE_DIRECTORY = $(SNOOPY_INVALIDATE_MOESIF_IMPLEMENTATION_DIRECTORY)/controller
SNOOPY_INVALIDATE_MOESIF_CONTROLLER_IMPLEMENTATION   = $(SNOOPY_INVALIDATE_MOESIF_DEPENDENCIES) \
																											 $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_SOURCE_DIRECTORY)/*.sv	

snoopy_invalidate_moesif_controller_implementation : $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_IMPLEMENTATION)
	$(VLOG) $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_IMPLEMENTATION)

#verification
SNOOPY_INVALIDATE_MOESIF_CONTROLLER_VERIFICATION = $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_IMPLEMENTATION) \
																									 $(SNOOPY_INVALIDATE_SET_ASSOCIATIVE_CACHE_IMPLEMENTATION) \
																									 $(SNOOPY_INVALIDATE_MOESIF_SOURCE_DIRECTORY)/verification/*.sv

snoopy_invalidate_moesif_controller_verification : $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_VERIFICATION)
	$(UVM_COMMAND) $(SNOOPY_INVALIDATE_MOESIF_CONTROLLER_VERIFICATION) && $(MODELSIM_VERIFICATION_COMMAND)
